name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve Node version from .npmrc
        id: nodever
        run: |
          set -euo pipefail
          ver=$(grep -E '^(use-node-version|node-version)=' .npmrc | head -n1 | cut -d'=' -f2 | tr -d '[:space:]')
          if [ -z "$ver" ]; then echo "No node version in .npmrc" >&2; exit 1; fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodever.outputs.version }}
          cache: 'pnpm'

      - name: Resolve pnpm version from package.json
        id: pnpm
        run: |
          set -euo pipefail
          line=$(grep -oE '"packageManager"\s*:\s*"pnpm@[^\"]+"' package.json || true)
          if [ -z "$line" ]; then echo "packageManager with pnpm not found" >&2; exit 1; fi
          ver=$(printf '%s\n' "$line" | sed -E 's/.*pnpm@([^\"]+)"/\1/')
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm.outputs.version }}
          run_install: false

      - name: Install dependencies
        run: pnpm -s install

      - name: Lint (tsc, eslint, prettier, markdownlint)
        run: pnpm -s lint

      - name: Build library
        run: pnpm -s build

      - name: Build example(s)
        run: pnpm -s run build:examples

      - name: Run tap tests (terse)
        run: pnpm -s tap -R terse

      - name: Run tsd type tests
        run: pnpm -s test:tsd
