name: Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve Node version from .npmrc
        id: nodever
        run: |
          set -euo pipefail
          ver=$(grep -E '^(use-node-version|node-version)=' .npmrc | head -n1 | cut -d'=' -f2 | tr -d '[:space:]')
          if [ -z "$ver" ]; then echo "No node version in .npmrc" >&2; exit 1; fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodever.outputs.version }}
          cache: 'pnpm'

      - name: Resolve pnpm version from package.json
        id: pnpm
        run: |
          set -euo pipefail
          line=$(grep -oE '"packageManager"\s*:\s*"pnpm@[^\"]+"' package.json || true)
          if [ -z "$line" ]; then echo "packageManager with pnpm not found" >&2; exit 1; fi
          ver=$(printf '%s\n' "$line" | sed -E 's/.*pnpm@([^\"]+)"/\1/')
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm.outputs.version }}
          run_install: false

      - name: Install dependencies
        run: pnpm -s install

      - name: Build docs (TypeDoc -> site/)
        run: pnpm -s build:docs

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
